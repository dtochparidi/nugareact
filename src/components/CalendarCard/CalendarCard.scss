@import 'src/common/variables.scss';
@import 'src/components/CalendarCard/Day/DateRow/DateRow.scss';
@import 'src/components/CalendarCard/Day/MonthRow/MonthRow.scss';

$scale: 0.7;
$time-column-width: 50px * $scale;
$calendar-cell-height: 60px * $scale;
$calendar-cell-width-min: 220px * $scale;
$top-row-height: $calendar-cell-height + $dateRow-height + $monthRow-height +
  $dateRow-padding * 2 + $thin-width;

:export {
  #{'calendarCellWidthMin'}: $calendar-cell-width-min;
  #{'calendarCellHeight'}: $calendar-cell-height;
}

.calendarCard {
  .borders {
    border: solid lightgrey 1px;
  }

  --rows-count: 5;
  --sub-columns-count: 5;

  display: block;
  width: auto !important;
  padding: 0;

  position: relative;

  background: #fcfcfc;

  .item {
    @extend .borders;

    display: flex;
    align-items: center;
    justify-content: center;

    background: #fcfcfc;

    // &.first {
    //   border-left: none;
    // }

    &.last {
      border-right-style: dashed;
      border-right-width: $thin-width;
    }
  }

  .leftColumn {
    position: absolute;
    top: 0;

    z-index: 1001;

    display: grid;
    grid-area: leftColumn;

    width: $time-column-width;
    pointer-events: none;

    grid-template-rows: $top-row-height repeat(
        var(--rows-count),
        $calendar-cell-height
      );

    :first-child {
      visibility: hidden;
    }
  }

  .daysContainer {
    position: relative;

    display: grid;
    grid-template-rows: $top-row-height auto;
    grid-template-columns: 100%;

    grid-area: daysContainer;
    overflow: hidden;

    height: 100%;
    width: auto;
    white-space: nowrap;

    will-change: scroll-position;

    &.loading > .gridsContainer {
      visibility: hidden;
    }

    &.loading > .topRowsContainer {
      visibility: hidden;
    }

    .topRowsContainer {
      width: 100%;
      overflow: hidden;

      .viewPortContainer {
        width: 100%;
        overflow: hidden;

        border-bottom: solid lightgray 1px;

        .scrollingContainer {
          width: 100%;
          overflow: hidden;

          .stickyContainer {
            display: grid;
            grid-auto-flow: column;

            .topRow {
              display: grid;
              z-index: 101;

              height: $calendar-cell-height;

              overflow: hidden;

              grid-template-rows: $calendar-cell-height;
              grid-template-columns: repeat(var(--columns-count), 1fr);
              grid-auto-flow: column;

              will-change: left, width;
            }
          }
        }
      }
    }

    .gridsContainer {
      width: 100%;
      overflow: hidden;
      position: relative;

      .dayWrapper {
        --columns-count: 6;

        display: inline-block;
        height: 100%;
        width: 100%;

        &.hidden > .day > .grid {
          display: none;
        }

        &.dragOrigin > .day > .grid {
          display: grid;
        }

        .day {
          display: grid;
          height: 100%;
          width: 100%;

          grid-template-rows: auto;

          .grid {
            display: grid;

            grid-template-columns: repeat(var(--columns-count), 1fr);
            grid-template-rows: repeat(
              var(--rows-count),
              $calendar-cell-height
            );

            .item {
              position: relative;
              transition: background 0.5s ease-in-out;

              .subGrid {
                position: absolute;

                display: grid;
                grid-auto-columns: 1fr;
                grid-template-rows: 1fr;
                grid-auto-flow: column;

                left: 0;
                top: 0;
                right: 0;
                bottom: 0;

                opacity: 1;
                // opacity: 0;
                transition: opacity 0.5s;

                .subGridElem {
                  border: dotted lightgrey 1px;

                  &.enter {
                    background: rgb(255, 249, 216);
                  }

                  &:first-child {
                    border-left: none;
                  }

                  &:last-child {
                    border-right: none;
                  }
                }
              }

              &.enter {
                background: rgb(255, 252, 236);
                &.locked {
                  background: inherit;
                }
              }
            }
          }
        }
      }
    }
  }
}

.cross-fade-leave {
  opacity: 1;
}
.cross-fade-leave.cross-fade-leave-active {
  opacity: 0;
  transition: opacity 0.25s ease-in;
}

.cross-fade-enter {
  opacity: 0;
}
.cross-fade-enter.cross-fade-enter-active {
  opacity: 1;
  transition: opacity 0.25s ease-in;
}
