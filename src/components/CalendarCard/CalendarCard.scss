@import 'src/common/variables.scss';

$time-column-width: 50px;
$calendar-cell-height: 60px;
$calendar-cell-width-min: 220px;

:export {
  calendarCellWidthMin: $calendar-cell-width-min;
}

.calendarCard {
  .borders {
    border: solid lightgrey 1px;
  }

  --rows-count: 5;
  --sub-columns-count: 5;

  display: grid;
  width: auto !important;
  padding: 0;

  grid-template-areas: 'leftColumn daysContainer';
  grid-template-columns: $time-column-width auto;
  grid-template-rows: auto;

  .item {
    @extend .borders;

    display: flex;
    align-items: center;
    justify-content: center;

    &.first {
      border-left-style: dashed;
    }

    &.last {
      border-right-style: dashed;
    }
  }

  .leftColumn {
    // @extend .borders;
    // border-right: none;

    display: grid;
    grid-area: leftColumn;

    grid-template-rows: repeat(
      calc(var(--rows-count) + 1),
      $calendar-cell-height
    );
  }

  .daysContainer {
    position: relative;

    grid-area: daysContainer;
    overflow: hidden;

    height: 100%;
    width: auto;
    white-space: nowrap;

    .dayWrapper {
      --columns-count: 6;

      display: inline-block;
      height: 100%;
      width: 100%;

      .day {
        display: grid;
        height: 100%;
        width: 100%;

        grid-template-rows: $calendar-cell-height auto;

        .topRow {
          display: grid;
          grid-template-rows: $calendar-cell-height;
          grid-template-columns: repeat(var(--columns-count), 1fr);
        }

        .grid {
          display: grid;

          grid-template-columns: repeat(var(--columns-count), 1fr);
          grid-template-rows: repeat(var(--rows-count), $calendar-cell-height);

          .item {
            position: relative;

            .subGrid {
              position: absolute;

              display: grid;
              grid-auto-columns: 1fr;
              grid-template-rows: 1fr;
              grid-auto-flow: column;

              left: 0;
              top: 0;
              right: 0;
              bottom: 0;

              opacity: 0;
              transition: opacity 0.5s;

              .subGridElem {
                border: dotted lightgrey 1px;
              }
            }

            &.dropzone {
              background: inherit;

              .subGrid {
                opacity: 1;
              }

              &.active {
                background: inherit;

                &.enter {
                  // background: rgb(241, 236, 189);
                  &.locked {
                    background: inherit;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
